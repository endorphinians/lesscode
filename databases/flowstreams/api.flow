{
	"paused": false,
	"cloning": true,
	"readme": "",
	"name": "API",
	"variables": {},
	"origin": "http://127.0.0.1:8000",
	"dtupdated": "2024-01-29T02:59:42.982Z",
	"id": "api",
	"components": {
		"taction": "<script total>\n\n\texports.id = 'taction';\n\texports.name = 'Action';\n\texports.icon = 'ti ti-totaljs';\n\texports.author = 'Total.js';\n\texports.version = '1';\n\texports.group = 'Total.js';\n\texports.config = { partial: false, name: 'Unknown', input: '', query: '', params: '', user: 0, permissions: '', code: '$.success();', strerr: false, path: 'response' };\n\texports.inputs = [{ id: 'input', name: 'Payload' }];\n\texports.outputs = [{ id: 'output', name: 'Response' }, { id: 'error', name: 'Error' }];\n\n\texports.install = function(com) {\n\n\t\tMAIN.flowtaction = {};\n\n\t\tconst ARGS = /\\{{1,2}[a-z0-9_.-\\s]+\\}{1,2}/gi;\n\t\tconst Options = function($, config) {\n\n\t\t\tvar t = this;\n\t\t\tvar data = $.data;\n\n\t\t\tif (!data || typeof(data) !== 'object')\n\t\t\t\tdata = {};\n\n\t\t\tt.id = config.name;\n\t\t\tt.error = new ErrorBuilder();\n\t\t\tt.controller = $.refs.controller;\n\t\t\tt.payload = data.payload || data.model || data.body;\n\n\t\t\tif (typeof(t.payload) !== 'object' || !t.payload)\n\t\t\t\tt.payload = {};\n\n\t\t\tt.message = $;\n\t\t\tt.config = config;\n\t\t\tt.user = data.user;\n\t\t\tt.query = data.query || {};\n\t\t\tt.params = data.params || {};\n\t\t\tt.url = data.url;\n\t\t\tt.language = data.language;\n\t\t\tt.headers = data.headers || {};\n\t\t\tt.files = data.files || [];\n\t\t\tt.cookies = data.cookies || {};\n\t\t\tt.ip = data.ip;\n\t\t\tt.ua = data.ua;\n\t\t\tt.request = data;\n\t\t};\n\n\t\tOptions.prototype = {\n\n\t\t\tget value() {\n\t\t\t\treturn this.payload;\n\t\t\t},\n\n\t\t\tget model() {\n\t\t\t\treturn this.payload;\n\t\t\t},\n\n\t\t\tset value(value) {\n\t\t\t\tthis.payload = value;\n\t\t\t},\n\n\t\t\tset model(value) {\n\t\t\t\tthis.payload = value;\n\t\t\t}\n\t\t};\n\n\t\tOptions.prototype.audit = function(message, type) {\n\t\t\tF.audit(this, message ? this.variables(message) : '', type);\n\t\t};\n\n\t\tOptions.prototype.success = function(value) {\n\t\t\tvar self = this;\n\t\t\tself.request[self.config.path] = { success: true, value: value };\n\t\t\tself.message.send('output', self.request);\n\t\t};\n\n\t\tOptions.prototype.cancel = function() {\n\t\t\tvar self = this;\n\t\t\tself.message.destroy();\n\t\t};\n\n\t\tOptions.prototype.successful = function(callback) {\n\t\t\tvar self = this;\n\t\t\treturn function(err, a, b, c) {\n\t\t\t\tif (err)\n\t\t\t\t\tself.invalid(err);\n\t\t\t\telse\n\t\t\t\t\tcallback.call(self, a, b, c);\n\t\t\t};\n\t\t};\n\n\t\tOptions.prototype.callback = function(value) {\n\n\t\t\tvar self = this;\n\n\t\t\tif (arguments.length == 0) {\n\t\t\t\treturn function(err, response) {\n\t\t\t\t\terr && self.error.push(err);\n\t\t\t\t\tself.callback(response);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (self.error.items.length) {\n\t\t\t\tself.request[self.config.path] = self.config.strerr ? self.error.toString() : self.error.output();\n\t\t\t\tself.message.send('error', self.request);\n\t\t\t} else {\n\t\t\t\tself.request[self.config.path] = value;\n\t\t\t\tself.message.send('output', self.request);\n\t\t\t}\n\t\t};\n\n\t\tOptions.prototype.done = function(arg) {\n\t\t\tvar self = this;\n\t\t\treturn function(err, response) {\n\t\t\t\tif (err) {\n\t\t\t\t\tself.error.push(err);\n\t\t\t\t\tself.callback(null);\n\t\t\t\t} else\n\t\t\t\t\tself.callback({ success: true, value: arg === true ? response : arg });\n\t\t\t};\n\t\t};\n\n\t\tOptions.prototype.invalid = function(error, path, index) {\n\t\t\tvar self = this;\n\t\t\tself.error.push(error, path, index);\n\t\t\tself.callback(null);\n\t\t};\n\n\t\tOptions.prototype.cookie = function(name, value, expire, options) {\n\t\t\tvar self = this;\n\t\t\tif (value === undefined)\n\t\t\t\treturn self.cookies[name];\n\n\t\t\tif (value === null)\n\t\t\t\texpire = '-1 day';\n\n\t\t\tif (self.controller) {\n\t\t\t\tself.controller.cookie(name, value, expire, options);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\tOptions.prototype.variables = function(str, data) {\n\n\t\t\tif (str.indexOf('{') === -1)\n\t\t\t\treturn str;\n\n\t\t\tvar $ = this;\n\n\t\t\treturn str.replace(ARGS, function(text) {\n\t\t\t\tvar l = text[1] === '{' ? 2 : 1;\n\t\t\t\tvar key = text.substring(l, text.length - l).trim();\n\t\t\t\tvar val = null;\n\t\t\t\tvar five = key.substring(0, 5);\n\t\t\t\tif (five === 'user.') {\n\t\t\t\t\tif ($.user) {\n\t\t\t\t\t\tkey = key.substring(5);\n\t\t\t\t\t\tval = key.indexOf('.') === -1 ? $.user[key] : U.get($.user, key);\n\t\t\t\t\t}\n\t\t\t\t} else if (five === 'data.') {\n\t\t\t\t\tif (data) {\n\t\t\t\t\t\tkey = key.substring(5);\n\t\t\t\t\t\tval = key.indexOf('.') === -1 ? data[key] : U.get(data, key);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar six = key.substring(0, 6);\n\t\t\t\t\tif (six === 'model.' || six === 'value.') {\n\t\t\t\t\t\tif ($.model) {\n\t\t\t\t\t\t\tkey = key.substring(6);\n\t\t\t\t\t\t\tval = key.indexOf('.') === -1 ? $.model[key] : U.get($.model, key);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (six === 'query.')\n\t\t\t\t\t\tval = $.query[key.substring(6)];\n\t\t\t\t\telse if (key.substring(0, 7) === 'params.')\n\t\t\t\t\t\tval = $.params[key.substring(7)];\n\t\t\t\t}\n\t\t\t\treturn val == null ? text : val;\n\t\t\t});\n\n\t\t};\n\n\t\tMAIN.flowtaction.Options = Options;\n\t\tMAIN.flowtaction.AsyncFunction = Object.getPrototypeOf(async function(){}).constructor;\n\t};\n\n\texports.uninstall = function() {\n\t\tdelete MAIN.flowtaction;\n\t};\n\n\texports.make = function(instance, config) {\n\n\t\tvar cfg = {};\n\t\tvar fn;\n\n\t\tinstance.message = function($) {\n\n\t\t\tvar opt = new MAIN.flowtaction.Options($, cfg);\n\t\t\tif (fn) {\n\n\t\t\t\t// check user\n\t\t\t\tif (cfg.user || cfg.permissions) {\n\n\t\t\t\t\tif ((cfg.user === 2 && opt.user) || (cfg.user === 1 && !opt.user)) {\n\t\t\t\t\t\topt.invalid(401);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (cfg.user === 1 && cfg.permissions) {\n\t\t\t\t\t\tlet permissions = cfg.permissions.slice(0);\n\t\t\t\t\t\tpermissions.unshift(opt);\n\t\t\t\t\t\tif (UNAUTHORIZED.apply(global, permissions))\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// check data\n\t\t\t\tlet tmp;\n\n\t\t\t\tif (cfg.input) {\n\t\t\t\t\ttmp = cfg.input.transform(opt.payload, cfg.partial, opt.error);\n\t\t\t\t\tif (tmp.error) {\n\t\t\t\t\t\topt.callback(null);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\topt.payload = tmp.response;\n\t\t\t\t}\n\n\t\t\t\tif (cfg.query) {\n\t\t\t\t\topt.error.prefix = 'query.';\n\t\t\t\t\ttmp = cfg.query.transform(opt.query, false, opt.error);\n\t\t\t\t\tif (tmp.error) {\n\t\t\t\t\t\topt.callback(null);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\topt.query = tmp.response;\n\t\t\t\t}\n\n\t\t\t\tif (cfg.params) {\n\t\t\t\t\topt.error.prefix = 'params.';\n\t\t\t\t\ttmp = cfg.params.transform(opt.params, false, opt.error);\n\t\t\t\t\tif (tmp.error) {\n\t\t\t\t\t\topt.callback(null);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\topt.params = tmp.response;\n\t\t\t\t}\n\n\t\t\t\topt.error.prefix = '';\n\n\t\t\t\ttry {\n\t\t\t\t\tfn(opt, opt.payload);\n\t\t\t\t} catch (e) {\n\t\t\t\t\topt.invalid(e);\n\t\t\t\t\tinstance.throw(e);\n\t\t\t\t}\n\t\t\t} else\n\t\t\t\topt.invalid(501);\n\t\t};\n\n\t\tinstance.configure = function() {\n\n\t\t\tfn = config.code.includes('await ') ? new MAIN.flowtaction.AsyncFunction('$', 'model', 'data', 'value', config.code) : new Function('$', 'model', 'data', 'value', config.code);\n\n\t\t\tcfg = {};\n\t\t\tfor (var key in config) {\n\t\t\t\tif (key !== 'code')\n\t\t\t\t\tcfg[key] = config[key];\n\t\t\t}\n\n\t\t\tcfg = instance.replace(cfg);\n\t\t\tcfg.input = cfg.input ? cfg.input.toJSONSchema() : null;\n\t\t\tcfg.query = cfg.query ? cfg.query.toJSONSchema() : null;\n\t\t\tcfg.params = cfg.params ? cfg.params.toJSONSchema() : null;\n\t\t\tcfg.permissions = cfg.permissions ? cfg.permissions.split(',').trim() : null;\n\n\t\t\tif (cfg.permissions && !cfg.permissions.length)\n\t\t\t\tcfg.permissions = null;\n\t\t};\n\n\t\tinstance.configure();\n\n\t};\n\n</script>\n\n<readme>\nThis component creates similar functionality as Total.js Actions.\n\n## Payload\n\n```js\n{\n\tip: String, // optional, IP address\n\turl: String, // optional\n\tlanguage: String, // optional\n\tua: String, // optional, parsed user-agent\n\tuser: Object, // optional\n\theaders: { key: String }, // optional, request headers\n\tcookies: { key: String }, // optional, cookies\n\tpayload: {}, // optional, request payload\n\tquery: { key: String }, // optional\n\tparams: { key: String }, // optional\n\tfiles: [{ type: String, filename: String, path: String, ext: String, size: Number, width: Number, height: Number }] // optional\n}\n```\n\n## Custom scripting\n\n- supports `await`\n- supports Total.js global functions\n\n__Properties__:\n\n- `$.model {Object}` or `model` parsed payload\n- `$.query {Object}` parsed URL query arguments\n- `$.params {Object}` parsed URL params\n- `$.cookies {Object}` parsed cookies\n- `$.files [Object]` uploaded files\n- `$.user {Object}` user session (optional)\n- `$.headers {Object}` request headers\n- `$.ip {String}` IP address (optional)\n- `$.language {String}` optional\n- `$.ua {String}` parsed user agent (optional)\n- `$.url {String}` URL endpoint\n- `$.message {Object}` Flow message instance\n- `$.request {Object}` Flow message payload data\n\n__Methods__:\n\n- `$.invalid(error)` responds with an error and ends the action\n- `$.success([value])` responds with `{ success: true, value }` object and ends the action\n- `$.callback(value)` responds with `value` object and ends the action\n- `$.cancel()` ends the action without response\n- `$.audit(message, [type])` writes audit\n\n## Supported types\n\n- `string`\n- `number`\n- `boolean`\n- `date`\n- `object`\n- `email`\n- `phone`\n- `zip`\n- `base64`\n- `url`\n- `datauri`\n- `json`\n- `lower`\n- `upper`\n- `capitalize` all words\n- `capitalize2` only first word\n- `name` makes a name (capitalizes words and remove special characters)\n- `zip`\n- `uid`\n- `guid`\n- `color`\n- `icon`\n- `search` prepares string to a search string\n- `safestring` checks XSS and SQL Injections\n- `smallint`\n- `tinyint`\n- `{A|B|C}` enum type\n- `[type]` means array\n- `{ name:String, age:Number }` means nested object\n- `[ name:String, age:Number ]` means array with an object\n- `*something:type` is `required` field\n</readme>\n\n<settings>\n\t<div class=\"padding\">\n\t\t<ui-component name=\"input\" path=\"?.name\" config=\"required:1\">Action name</ui-component>\n\t</div>\n\t<div class=\"padding bg-smoke\">\n\t\t<div class=\"pull-left\">\n\t\t\t<div class=\"ui-input-label\">Allow only:</div>\n\t\t\t<ui-component name=\"choose\" path=\"?.user\" config=\"selector:div;type:number\" class=\"iconmenu m\">\n\t\t\t\t<div data-id=\"1\" style=\"width:90px\">\n\t\t\t\t\t<i class=\"ti ti-lock\"></i>\n\t\t\t\t\t<span>Authorized</span>\n\t\t\t\t</div>\n\t\t\t\t<div data-id=\"2\" style=\"width:90px\">\n\t\t\t\t\t<i class=\"ti ti-unlock\"></i>\n\t\t\t\t\t<span>Unauthorized</span>\n\t\t\t\t</div>\n\t\t\t\t<div data-id=\"0\" style=\"width:90px\">\n\t\t\t\t\t<i class=\"ti ti-door-open\"></i>\n\t\t\t\t\t<span>Both</span>\n\t\t\t\t</div>\n\t\t\t</ui-component>\n\t\t</div>\n\t\t<div class=\"pull-left\" style=\"margin-left:20px\">\n\t\t\t<div style=\"height:25px\"></div>\n\t\t\t<ui-component name=\"input\" path=\"?.partial\" config=\"type:checkbox\">Allow partial data</ui-component>\n\t\t\t<ui-component name=\"input\" path=\"?.strerr\" config=\"type:checkbox\">Convert errors to a string</ui-component>\n\t\t</div>\n\t\t<div class=\"clearfix\"></div>\n\t</div>\n\t<div class=\"padding\">\n\n\t\t<div class=\"m\">\n\t\t\t<ui-component name=\"input\" path=\"?.input\" config=\"monospace:1;placeholder:name\\:Name, *email\\:Email\">Payload schema</ui-component>\n\t\t</div>\n\t\t<div class=\"m\">\n\t\t\t<ui-component name=\"input\" path=\"?.query\" config=\"monospace:1;placeholder:page\\:Number\">Query arguments schema</ui-component>\n\t\t</div>\n\t\t<div class=\"padding bg-smoke radius npb\">\n\t\t\t<div class=\"grid-3\">\n\t\t\t\t<div class=\"m\">\n\t\t\t\t\t<ui-component name=\"input\" path=\"?.params\" config=\"monospace:1;placeholder:*id\\:String\">Params schema</ui-component>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"m\">\n\t\t\t\t\t<ui-component name=\"input\" path=\"?.permissions\" config=\"monospace:1;placeholder:admin, director\">Permissions</ui-component>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"m\">\n\t\t\t\t\t<ui-component name=\"input\" path=\"?.path\" config=\"monospace:1;required:1;placeholder:response\">Path for storing a response</ui-component>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"caption m\">\n\t\t\t<label><i class=\"ti ti-code\"></i>Custom code</label>\n\t\t</div>\n\t\t<ui-component name=\"codemirror\" path=\"?.code\" config=\"required:1;type:javascript;height:300;tabs:true;trim:true\"></ui-component>\n\t</div>\n</settings>\n\n<style>\n\t.CLASS .content { min-height: 0; height: auto; }\n\t.CLASS .ti { color: #999; }\n</style>\n\n<body>\n\t<header style=\"background:#68B25B;height:5px;border-top:3px solid #83C83C\"></header>\n\t<footer>\n\t\t<ui-bind path=\"$CONFIG\" config=\"template\" class=\"block fs11\" style=\"padding:10px\">\n\t\t\t<script type=\"text/html\">\n\t\t\t\t<div style=\"font-size:14px\" class=\"mb5\"><span class=\"badge badge-green b\">{{ value.name }}</span></div>\n\t\t\t\t{{ if value.user }}<div><i class=\"ti ti-check-square mr5\"></i>{{ if value.user === 1 }}Authorized only{{ else if value.user === 2 }}Unauthorized only{{ fi }}</div>{{ fi }}\n\t\t\t\t{{ if value.partial }}<div><i class=\"ti ti-check-square green mr5\"></i>Partial data</div>{{ fi }}\n\t\t\t\t{{ if value.input }}<div><i class=\"ti ti-check-square green mr5\"></i>Input data</div>{{ fi }}\n\t\t\t\t{{ if value.query }}<div><i class=\"ti ti-check-square green mr5\"></i>URL Query arguments</div>{{ fi }}\n\t\t\t\t{{ if value.params }}<div><i class=\"ti ti-check-square green mr5\"></i>Params</div>{{ fi }}\n\t\t\t\t{{ if value.permissions }}<div><i class=\"ti ti-check-square green mr5\"></i>Permissions</div>{{ fi }}\n\t\t\t</script>\n\t\t</ui-bind>\n\t</footer>\n</body>",
		"tresponse": "<script total>\n\n\texports.id = 'tresponse';\n\texports.name = 'Response';\n\texports.group = 'Total.js';\n\texports.icon = 'ti ti-bullhorn';\n\texports.version = '1';\n\texports.author = 'Total.js';\n\texports.config = { type: 'auto', code: 200, path: 'response' };\n\texports.inputs = [{ id: 'input', name: 'Response' }];\n\texports.outputs = [{ id: 'output', name: 'Log' }];\n\texports.kind = 'output';\n\n\texports.make = function(instance, config) {\n\n\t\tvar nested = false;\n\n\t\tinstance.message = function($) {\n\t\t\tvar ctrl = $.refs.controller;\n\t\t\tif (ctrl) {\n\n\t\t\t\tif (F.is5)\n\t\t\t\t\tctrl.response.status = config.code;\n\t\t\t\telse\n\t\t\t\t\tctrl.status = config.code;\n\n\t\t\t\tvar value = config.path ? (nested ? U.get(config.path, $.data) : $.data[config.path]) : $.data;\n\n\t\t\t\tswitch (config.type) {\n\t\t\t\t\tcase 'auto':\n\t\t\t\t\t\tif (value instanceof Array && value.length && value[0].error) {\n\t\t\t\t\t\t\tif (F.is5)\n\t\t\t\t\t\t\t\tctrl.response.status = 400;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tctrl.status = 400;\n\t\t\t\t\t\t\tctrl.json(value);\n\t\t\t\t\t\t} else\n\t\t\t\t\t\t\tctrl.json(value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'json':\n\t\t\t\t\t\tctrl.json(value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'success':\n\t\t\t\t\t\tctrl.success();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'html':\n\t\t\t\t\t\tctrl.content(value, 'text/html');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'plain':\n\t\t\t\t\t\tctrl.plain(value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'empty':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tctrl.empty();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t$.send('output', value);\n\t\t\t} else\n\t\t\t\t$.destroy();\n\t\t};\n\n\t\tinstance.configure = function() {\n\t\t\tnested = config.path && config.path.includes('.') ? true : false;\n\t\t};\n\t};\n\n</script>\n\n<readme>\nThis component can respond on the REST Route component.\n</readme>\n\n<settings>\n\t<div class=\"padding\">\n\t\t<div class=\"grid-3\">\n\t\t\t<div class=\"m\">\n\t\t\t\t<ui-component name=\"input\" path=\"?.type\" config=\"required:1;dirsource:auto|Auto,json|JSON,success|Success,empty|Empty response,plain|Plain text,html|HTML\">Type</ui-component>\n\t\t\t</div>\n\t\t\t<ui-bind path=\"?.type\" config=\"disabled:value === 'auto'\" class=\"m block\">\n\t\t\t\t<ui-component name=\"input\" path=\"?.code\" config=\"required:1;type:number;format:\">Status code</ui-component>\n\t\t\t</ui-bind>\n\t\t\t<div class=\"m\">\n\t\t\t\t<ui-component name=\"input\" path=\"?.path\" config=\"monospace:1;align:1\">Path for reading value</ui-component>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</settings>\n\n<style>\n\t.CLASS header { padding: 6px !important; }\n\t.CLASS header ui-bind { font-family: var(--monospace); color: #FFF; margin-left: 4px; font-size: 12px; }\n\t.CLASS header ui-bind code { border-radius: var(--radius) 0 0 var(--radius); padding: 2px 3px; }\n\t.CLASS header ui-bind span { background-color: gray; border-radius: 0 var(--radius) var(--radius) 0; padding: 2px 3px; }\n</style>\n\n<body>\n\t<header>\n\t\t<i class=\"ICON\"></i>NAME\n\t\t<ui-bind path=\"CONFIG\" config=\"template\">\n\t\t\t<script type=\"text/html\">\n\t\t\t\t<code style=\"background:{{ if value.code >= 400 }}#E73323{{ else }}#4285F4{{ fi }}\">{{ value.code }}</code><span>{{ value.type }}</span>\n\t\t\t</script>\n\t\t</ui-bind>\n\t</header>\n</body>",
		"troute": "<script total>\n\n\texports.id = 'troute';\n\texports.name = 'Route';\n\texports.group = 'Total.js';\n\texports.icon = 'ti ti-exchange';\n\texports.version = '1';\n\texports.author = 'Total.js';\n\texports.config = { url: '/', method: 'GET', timeout: 5000, limit: 5120, upload: false, user: 0, send: 'all' };\n\texports.outputs = [{ id: 'output', name: 'Request' }];\n\texports.kind = 'trigger';\n\n\texports.make = function(instance, config) {\n\n\t\tvar prev = null;\n\n\t\tinstance.close = function() {\n\t\t\tprev && prev.remove();\n\t\t\tprev = null;\n\t\t};\n\n\t\tinstance.configure = function() {\n\n\t\t\tif (prev) {\n\t\t\t\tprev && prev.remove();\n\t\t\t\tprev = null;\n\t\t\t}\n\n\t\t\tif (config.url && config.method) {\n\n\t\t\t\tvar flags = [];\n\n\t\t\t\tconfig.timeout && flags.push(F.is5 ? ('<' + Math.ceil(config.timeout / 1000) + 's') : config.timeout);\n\n\t\t\t\tif (F.is5 && config.upload)\n\t\t\t\t\tflags.push('<' + config.limit + 'MB');\n\n\t\t\t\tconfig.upload && flags.push((F.is5 ? '@' : '') + 'upload');\n\n\t\t\t\tvar action = function($) {\n\n\t\t\t\t\tvar ctrl = F.is5 ? $ : this;\n\t\t\t\t\tvar msg = instance.newmessage();\n\t\t\t\t\tvar data;\n\n\t\t\t\t\t// Parse cookies\n\t\t\t\t\tvar cookies = {};\n\t\t\t\t\tvar cookie = ctrl.headers.cookie;\n\n\t\t\t\t\tif (cookie) {\n\t\t\t\t\t\tlet arr = cookie.split(';');\n\t\t\t\t\t\tfor (let c of arr) {\n\t\t\t\t\t\t\tlet line = c.trim();\n\t\t\t\t\t\t\tlet index = line.indexOf('=');\n\t\t\t\t\t\t\tif (index !== -1)\n\t\t\t\t\t\t\t\tcookies[line.substring(0, index)] = line.substring(index + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar query = ctrl.query;\n\t\t\t\t\tvar body = ctrl.body;\n\t\t\t\t\tvar params = ctrl.params;\n\n\t\t\t\t\tswitch (config.send) {\n\t\t\t\t\t\tcase 'payload':\n\t\t\t\t\t\t\tdata = body;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'query':\n\t\t\t\t\t\t\tdata = query;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'files':\n\t\t\t\t\t\t\tdata = ctrl.files;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'params':\n\t\t\t\t\t\t\tdata = params;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'headers':\n\t\t\t\t\t\t\tdata = ctrl.headers;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'user':\n\t\t\t\t\t\t\tdata = ctrl.user;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'cookies':\n\t\t\t\t\t\t\tdata = cookies;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tdata = { body: body, query: query, user: ctrl.user, files: ctrl.files, user: ctrl.user, url: ctrl.url, headers: ctrl.headers, params: params, ip: ctrl.ip, split: ctrl.split, cookies: cookies, ua: ctrl.ua };\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tmsg.refs.controller = ctrl;\n\t\t\t\t\tmsg.send('output', data);\n\n\t\t\t\t};\n\n\t\t\t\tvar auth = config.user == 1 ? '+' : config.user == 2 ? '-' : '';\n\t\t\t\tvar url = config.url.replace(/#/g, instance.main.id);\n\t\t\t\tprev = F.is5 ? ROUTE(auth + config.method + ' ' + url + (config.action && config.method === 'API' ? (' ' + config.action) : '') + ' ' + flags.join(' '), action) : ROUTE(auth + config.method + ' ' + instance.replace(url) + (config.action && config.method === 'API' ? (' ' + config.action) : ''), action, flags, config.limit);\n\t\t\t}\n\t\t};\n\n\t\tinstance.configure();\n\t};\n\n</script>\n\n<readme>\nThis component registers an HTTP Route and sends request data next. It stores `controller` instance in the `message.refs.controller` property. You must respond to the REST response component.\n\n__Output data__:\n\n```js\n{\n\tip: String, // optional, IP address\n\turl: String, // optional\n\tlanguage: String, // optional\n\tua: String, // optional, parsed user-agent\n\tuser: Object, // optional\n\theaders: { key: String }, // optional, request headers\n\tcookies: { key: String }, // optional, cookies\n\tpayload: {}, // optional, request payload\n\tquery: { key: String }, // optional\n\tparams: { key: String }, // optional\n\tfiles: [{ type: String, filename: String, path: String, ext: String, size: Number, width: Number, height: Number }] // optional\n}\n```\n</readme>\n\n<settings>\n\t<div class=\"padding\">\n\t\t<ui-bind path=\"flow.head.worker\" config=\"hide:!value || flow.head.origin.length < flow.head.proxyurl.length\" class=\"block\">\n\t\t\t<div class=\"message message-error\"><b><i class=\"ti ti-warning\"></i>No proxy endpoint defined.</b><br>This component will not work until then. Please go to main screen, open settings of this FlowStream instance and set the Endpoint.</div>\n\t\t</ui-bind>\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-md-3 m\">\n\t\t\t\t<ui-component name=\"input\" path=\"?.method\" config=\"required:1;dirsource:GET|GET,POST|POST,PUT|PUT,PATCH|PATCH,DELETE|DELETE,API|API\">Method</ui-component>\n\t\t\t\t<div class=\"help\">HTTP method</div>\n\t\t\t</div>\n\t\t\t<div class=\"col-md-9 m\">\n\t\t\t\t<ui-component name=\"input\" path=\"?.url\" config=\"monospace:1;required:1\">Relative URL address</ui-component>\n\t\t\t\t<div class=\"help\">A relative path to: <ui-bind path=\"flow.head.proxyurl\" config=\"text:value?value:window.location.origin\"></ui-bind><br />It supports wildcard <code>/something/*</code> or dynamic arguments <code>/products/{category}/</code>.<br /><code>#</code> will be replaced with a FlowStream <code>id</code> identifier.</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<ui-bind path=\"?.method\" config=\"show:value === 'API'\" class=\"block hidden m padding bg-smoke radius\">\n\t\t\t<ui-component name=\"input\" path=\"?.action\" config=\"monospace:1;required:1;placeholder:+users_read/{id}\">API Action</ui-component>\n\t\t</ui-bind>\n\n\t\t<ui-component name=\"input\" path=\"?.upload\" config=\"type:checkbox\">Allow uploading files</ui-component>\n\t\t<hr />\n\n\t\t<div class=\"ui-input-label mt10\">Continue as:</div>\n\t\t<ui-component name=\"choose\" path=\"?.user\" config=\"selector:div;type:number\" class=\"iconmenu m\">\n\t\t\t<div data-id=\"1\" style=\"width:90px\">\n\t\t\t\t<i class=\"ti ti-lock\"></i>\n\t\t\t\t<span>Authorized</span>\n\t\t\t</div>\n\t\t\t<div data-id=\"2\" style=\"width:90px\">\n\t\t\t\t<i class=\"ti ti-unlock\"></i>\n\t\t\t\t<span>Unauthorized</span>\n\t\t\t</div>\n\t\t\t<div data-id=\"0\" style=\"width:90px\">\n\t\t\t\t<i class=\"ti ti-door-open\"></i>\n\t\t\t\t<span>Both</span>\n\t\t\t</div>\n\t\t</ui-component>\n\n\t\t<div class=\"grid-3\">\n\t\t\t<div class=\"m\">\n\t\t\t\t<ui-component name=\"input\" path=\"?.timeout\" config=\"required:1;type:number;format:\">Timeout</ui-component>\n\t\t\t</div>\n\t\t\t<div class=\"m\">\n\t\t\t\t<ui-component name=\"input\" path=\"?.limit\" config=\"required:1;type:number;ricon:!kB;align:1;format:\">Request limit</ui-component>\n\t\t\t</div>\n\t\t\t<div class=\"m\">\n\t\t\t\t<ui-component name=\"input\" path=\"?.send\" config=\"required:1;dirsource:all|Everything,payload|Payload,query|Query arguments,files|Files,params|Dynamic params,headers|Headers,cookies|Cookies,user|User\">Send to output</ui-component>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</settings>\n\n<style>\n\t.CLASS footer { padding: 10px; color: #999; }\n\t.CLASS footer .method { background-color: var(--color); color: #FFF; padding: 2px 3px; border-radius: var(--radius); }\n</style>\n\n<body>\n\t<header>\n\t\t<i class=\"$ICON\"></i>$NAME\n\t</header>\n\t<footer class=\"monospace\"></footer>\n</body>\n\n<script>\n\tTOUCH(function(exports, reinit) {\n\n\t\tvar template = Tangular.compile('{{ if value.user == 1 }}<i class=\"ti ti-lock red mr10\"></i>{{ else if value.user == 2 }}<i class=\"ti ti-unlock blue mr10\"></i>{{ fi }}<span class=\"method\">{{ value.method }}</span> <a href=\"{{ value.link }}\" target=\"_blank\">{{ value.url }}</a>{{ if value.method === \\'API\\' }} {{ value.action }}{{ fi }}');\n\n\t\tvar reload = function() {\n\t\t\tvar model = CLONE(exports.config);\n\t\t\tmodel.link = model.url = model.url.replace(/#/g, flow.head.id);\n\n\t\t\tif (flow.head.proxypath)\n\t\t\t\tmodel.link = flow.head.origin + (flow.head.proxypath + model.link).replace(/\\/{2,}/g, '/');\n\t\t\telse\n\t\t\t\tmodel.link = flow.head.origin + model.link;\n\n\t\t\texports.element.find('footer').html(template({ value: model }));\n\t\t};\n\n\t\texports.configure = reload;\n\t\treload();\n\t});\n</script>",
		"print": "<script total>\n\n\texports.id = 'print';\n\texports.name = 'Print';\n\texports.group = 'Common';\n\texports.version = '5';\n\texports.icon = 'ti ti-print';\n\texports.author = 'Total.js';\n\texports.config = { repo: false, data: true };\n\texports.inputs = [{ id: 'input', name: 'Input' }];\n\n\texports.make = function(instance, config) {\n\n\t\tfunction serializer(key, value) {\n\t\t\treturn value && value.type === 'Buffer' && value.data ? ('<Buffer ' + value.data.splice(0, 10).map(n => n.toString(16).padLeft(2, '0')).join('') + '...') : value;\n\t\t}\n\n\t\tinstance.message = function($) {\n\n\t\t\tvar data = $.data;\n\n\t\t\tif (config.data !== false) {\n\t\t\t\tif (data instanceof Buffer)\n\t\t\t\t\tdata = '<Buffer ' + data.toString('hex').substring(0, 10) + '...';\n\t\t\t}\n\n\t\t\tvar count = 0;\n\n\t\t\tfor (var key in config) {\n\t\t\t\tif (config[key])\n\t\t\t\t\tcount++;\n\t\t\t}\n\n\t\t\tvar output = count > 1 ? {} : null;\n\n\t\t\tif (config.repo) {\n\t\t\t\tif (output)\n\t\t\t\t\toutput.repo = $.repo;\n\t\t\t\telse\n\t\t\t\t\toutput = $.repository;\n\t\t\t}\n\n\t\t\tif (config.data) {\n\t\t\t\tif (output)\n\t\t\t\t\toutput.data = $.data;\n\t\t\t\telse\n\t\t\t\t\toutput = $.data;\n\t\t\t}\n\n\t\t\tif (output) {\n\t\t\t\toutput = JSON.stringify(output, serializer);\n\t\t\t\tinstance.status(output, 200);\n\t\t\t}\n\n\t\t\t$.destroy();\n\t\t};\n\n\t\tinstance.trigger = function() {\n\t\t\tinstance.status('');\n\t\t};\n\n\t};\n\n</script>\n\n<style>\n\t.CLASS footer > ui-bind { margin: 10px; }\n\t.CLASS pre { font-size: 10px; margin: 0; padding: 5px; background-color: #F0F0F0; border-radius: var(--radius); }\n\t.CLASS .json { white-space: pre; }\n\t.CLASS .noscrollbar { max-height: 250px; }\n\t.CLASS .readme { position: absolute; position: absolute; font-size: 11px; right: 5px; margin-top: -5px; cursor: pointer; }\n\t.ui-dark .CLASS pre { background-color: #404040; tab-size: 2; }\n</style>\n\n<readme>\nThe component prints incoming data in a JSON format.\n</readme>\n\n<settings>\n\t<div class=\"padding\">\n\t\t<ui-component name=\"input\" path=\"?.repo\" config=\"type:checkbox\">Shows repository</ui-component>\n\t\t<ui-component name=\"input\" path=\"?.data\" config=\"type:checkbox\">Shows data</ui-component>\n\t</div>\n</settings>\n\n<body>\n\t<header>\n\t\t<button class=\"exec button\" data-exec=\"FUNC.trigger\">Clear</button>\n\t\t<i class=\"ICON\"></i>NAME\n\t</header>\n\t<footer>\n\t\t<ui-bind path=\"!STATUS\" config=\"html pre:Thelpers.jsonformat(JSON.stringify(JSON.parse(value), null, '\\t'));show:value && value.length > 0\" class=\"hidden selectable block\">\n\t\t\t<span class=\"readme\" title=\"Open in new window\"><i class=\"ti ti-window\"></i></span>\n\t\t\t<div class=\"noscrollbar mt5\">\n\t\t\t\t<pre class=\"json\"></pre>\n\t\t\t</div>\n\t\t</ui-bind>\n\t</footer>\n</body>\n\n<script>\n\tTOUCH(function(exports, reinit) {\n\n\t\tif (reinit)\n\t\t\treturn;\n\n\t\tvar laststatus;\n\n\t\texports.status = function(status, isinit) {\n\t\t\tlaststatus = status;\n\t\t};\n\n\t\texports.element.on('click', '.readme', function() {\n\t\t\tFUNC.readme('Debug', '```json\\n' + JSON.stringify(JSON.parse(laststatus), null, '  ') + '\\n```');\n\t\t});\n\n\t});\n</script>",
		"counter": "<script total>\n\n\texports.id = 'counter';\n\texports.name = 'Counter';\n\texports.group = 'Common';\n\texports.version = '1';\n\texports.icon = 'ti ti-calculator';\n\texports.author = 'Total.js';\n\texports.config = {};\n\texports.inputs = [{ id: 'input', name: 'Input' }];\n\n\texports.make = function(instance) {\n\n\t\tvar status = { count: 0, ts: null };\n\n\t\tinstance.message = function($) {\n\t\t\tstatus.count++;\n\t\t\tstatus.ts = NOW = new Date();\n\t\t\tinstance.status(status, 200);\n\t\t\t$.destroy();\n\t\t};\n\n\t\tinstance.trigger = function(data) {\n\t\t\tstatus.count = 0;\n\t\t\tstatus.ts = null;\n\t\t\tinstance.status(status);\n\t\t};\n\n\t\tinstance.status(status);\n\n\t};\n\n</script>\n\n<style>\n\t.CLASS .status { font-size: 35px; margin: 0; padding: 0 10px 10px; font-weight: bold; text-align: center; }\n\t.CLASS .ts { text-align: center; font-size: 11px; color: #777; padding: 5px 0; border-top: 1px solid rgba(0,0,0,0.1); margin: 0 15px; }\n</style>\n\n<readme>\nThe component counts incoming messages.\n</readme>\n\n<body>\n\t<header>\n\t\t<button class=\"exec button\" data-exec=\"FUNC.trigger\">Reset</button>\n\t\t<i class=\"ICON\"></i>NAME\n\t</header>\n\t<footer>\n\t\t<ui-bind path=\"!STATUS\" config=\"template\" class=\"block\">\n\t\t\t<script type=\"text/html\">\n\t\t\t\t<div class=\"status\">{{ value.count }}</div>\n\t\t\t\t<div class=\"ts\">{{ if value.ts }}{{ value.ts | format('[ts]') }}{{ else }}---{{ fi }}</div>\n\t\t\t</script>\n\t\t</ui-bind>\n\t</footer>\n</body>",
		"cheerio": "<script total>\n\n\texports.id = 'cheerio';\n\texports.name = 'Cheerio';\n\texports.group = 'HTML';\n\texports.icon = 'ti ti-code';\n\texports.author = 'Total.js';\n\texports.version = '1';\n\texports.config = { fn: '// instance : Component instance\\n// $: cheerio instance\\n// html: html string\\nvar body = $(\\'body\\').html();\\nreturn body;', path: '' };\n\texports.inputs = [{ id: 'input', name: 'Input' }];\n\texports.outputs = [{ id: 'output', name: 'Output' }];\n\n\texports.npm = ['cheerio'];\n\t// exports.meta = { readonly: false, singleton: false, hidden: false };\n\n\texports.make = function(instance, config) {\n\n\t\t// instance.main.variables {Object}\n\t\t// instance.main.variables2 {Object}\n\t\t// instance.save();\n\t\t// instance.replace(str); // replaces {variable_name} for values from \"variables\" and \"variables2\"\n\t\t// instance.status(obj, [refresh_delay_in_ms]);\n\n\t\tconst cheerio = require('cheerio');\n\t\tvar get, fn;\n\n\t\tinstance.message = function($) {\n\t\t\tvar data = $.data;\n\n\t\t\tvar input = CLONE(data);\n\t\t\tvar html;\n\t\t\tif (config.path) {\n\t\t\t\thtml = get(data);\n\t\t\t} else {\n\t\t\t\thtml = data;\n\t\t\t}\n\n\t\t\tif (typeof(html) !== 'string') {\n\t\t\t\t$.send('output', { error: 'invalid data, expected \"data{0}{1}\" to be a string'.format(config.path ? '.' : '', config.path) });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst $$ = cheerio.load(html);\n\t\t\tvar result = fn($.instance,$$, html);\n\n\t\t\t$.data = { result, input };\n\t\t\t$.send('output');\n\t\t};\n\n\t\tinstance.configure = function() {\n\n\t\t\tif (config.path)\n\t\t\t\tget = new Function('data', 'return data?.{0};'.format(config.path.replace(/\\./g, '?.')));\n\n\t\t\tif (config.fn) {\n\t\t\t\ttry {\n\t\t\t\t\tfn = new Function('instance','$', 'html', config.fn);\n\t\t\t\t\tinstance.status('');\n\t\t\t\t} catch(e){\n\t\t\t\t\tinstance.throw(e.stack);\n\t\t\t\t\tinstance.status('Invalid code');\n\t\t\t\t}\n\t\t\t} else\n\t\t\t\tinstance.status('Not configured');\n\t\t};\n\n\t\tinstance.configure();\n\n\t};\n\n</script>\n\n<readme>\n\tUses [Cheerio](https://cheerio.js.org/index.html)\n\tPlease refer to the [documentation](https://cheerio.js.org/classes/Cheerio.html) for available functions.\n## Input\n```js\n<any>\n```\n\n## Output\n```js\n{\n\tresult: <the data returned from the code>,\n\tinput: <incomming data>\n}\n```\n\n## Example code\n```js\n// instance : component instance\n// $: cheerio instance\n// html: html string\n\nvar txt = [];\n$('ul > li').each(function (i, elem) {\n\ttxt.push($(this).text());\n});\nreturn txt;\n```\n</readme>\n\n<settings>\n\t<div class=\"padding\">\n\t\t<ui-component name=\"input\" path=\"?.path\">Path to html</ui-component>\n\t\t<div class=\"help m\">Leave empty if the 'data' itself is the html string, otherwise use dot notation. E.g.: { request: { body: '&lt;html&gt;...&lt;/html&gt;' }} -> `request.body` </div>\n\t\t<div class=\"ui-input-label\">Code:</div>\n\t\t<ui-component name=\"codemirror\" path=\"?.fn\" config=\"type:javascript;minheight:300;parent:.ui-largeform-body;margin:60;tabs:true;trim:true\"></ui-component>\n\t\t<div class=\"help\">Available variables: '&dollar;' -> cheerio instance, 'html' -> html string. Use 'return somedata;' to return whatever you want. Output data -> { result: somedata, input: inputdata }</div>\n\t</div>\n</settings>\n\n<style>\n\t.CLASS footer { padding: 10px; font-size: 12px; }\n</style>\n\n<body>\n\t<header>\n\t\t<i class=\"ICON\"></i>NAME\n\t</header>\n\t<footer><ui-bind path=\"!STATUS\" config=\"text;show\"></ui-bind></footer>\n</body>"
	},
	"design": {
		"ilrivw79u": {
			"id": "ilrivw79u",
			"config": {
				"url": "/",
				"method": "GET",
				"timeout": 5000,
				"limit": 5120,
				"upload": false,
				"user": 0,
				"send": "all"
			},
			"x": 175,
			"y": 308,
			"note": "Visit <http://127.0.0.1:8000>",
			"component": "troute",
			"connections": {
				"output": [
					{
						"id": "ilrivx9bm",
						"index": "input"
					}
				]
			}
		},
		"ilrivw9g0": {
			"id": "ilrivw9g0",
			"config": {
				"type": "auto",
				"code": 200,
				"path": "response"
			},
			"x": 828,
			"y": 506,
			"component": "tresponse",
			"connections": {}
		},
		"ilrivx9bm": {
			"id": "ilrivx9bm",
			"config": {
				"partial": false,
				"name": "Welcome",
				"input": "",
				"query": "",
				"params": "",
				"user": 0,
				"permissions": "",
				"code": "$.callback({ message: 'Welcome to the LessCode app!' });",
				"strerr": false,
				"path": "response"
			},
			"x": 484,
			"y": 386,
			"component": "taction",
			"connections": {
				"output": [
					{
						"id": "ilrivw9g0",
						"index": "input"
					},
					{
						"id": "ilrizom80",
						"index": "input"
					},
					{
						"id": "ilrizpkpm",
						"index": "input"
					}
				],
				"error": [
					{
						"id": "ilrivw9g0",
						"index": "input"
					}
				]
			}
		},
		"ilrizom80": {
			"id": "ilrizom80",
			"config": {
				"repo": false,
				"data": true
			},
			"x": 1018,
			"y": 394,
			"component": "print",
			"connections": {}
		},
		"ilrizpkpm": {
			"id": "ilrizpkpm",
			"config": {},
			"x": 777,
			"y": 203,
			"component": "counter",
			"connections": {}
		}
	},
	"sources": {}
}